import{_ as a,c as i,o as n,a2 as l}from"./chunks/framework.9Uv4PgnO.js";const o=JSON.parse('{"title":"BGP组网","description":"","frontmatter":{},"headers":[],"relativePath":"connect/bgp.md","filePath":"connect/bgp.md"}'),p={name:"connect/bgp.md"};function e(t,s,h,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[l(`<h1 id="bgp组网" tabindex="-1">BGP 组网 <a class="header-anchor" href="#bgp组网" aria-label="Permalink to &quot;BGP组网&quot;">​</a></h1><p><a href="https://baimeow.cn/posts/dn11/configurebgp/#%E9%85%8D%E7%BD%AE%E9%9A%A7%E9%81%93" target="_blank" rel="noreferrer">原文链接</a></p><details class="details custom-block"><summary>从 ospf 到 bgp</summary><p>DN11 配网第二期，接上文 “使用 Bird2 配置 WireGuard + OSPF 实现网络的高可用”，这是一篇用于 DN11 的 BGP 配置教程</p><p>随着 DN11 的扩大，使用 OSPF 进行集中管理已经变得麻烦起来了，此外还能看到一堆隧道 IP 污染路由表</p><p>也有不少人手上有多个内网，不得不打破 DN11 原先一个人使用一个 / 24 网段的约定</p><p>近期又在考虑和 VidarNetwork 并网的事情，最终合并完的网络会变得相当庞大，或许是时候转移到 BGP 上去了</p></details><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><h3 id="选择一个as-number" tabindex="-1">选择一个 AS Number <a class="header-anchor" href="#选择一个as-number" aria-label="Permalink to &quot;选择一个AS Number&quot;">​</a></h3><p>BGP 是用于连接不同 AS 的路由协议，现在定义每一个人选取自己的 AS 号管理自己的 AS。对于已经有 AS 号的，可以使用已有的 AS 号，没有 AS 号的建议选择 421111xxxx 并登记进文档。</p><p>如何申请见 <a href="./subnet.html">子网并入</a></p><h3 id="选择自己的网段" tabindex="-1">选择自己的网段 <a class="header-anchor" href="#选择自己的网段" aria-label="Permalink to &quot;选择自己的网段&quot;">​</a></h3><p>首先，不要一次性宣告大于 <code>/24</code> 的网段， <code>/24</code> 已经很够你折腾，如果你有多个路由设备并且确实有多个真实子网，那么你可以申请宣告两个或者三个 <code>/24</code> 的网段。</p><p>在申请时也不要为了省网段资源而采用申请 <code>/25</code> 这种做法，没有必要，只会给你带来更多的麻烦。</p><p>如果你是新加入 DN11 的成员，虽然 DN11 改为 BGP 的同时我们放开了网段的限制，但是别用其他常见网段</p><ul><li>172.16.x.0/24 (这是 DN11 使用的网段， <code>.17</code> <code>.18</code> 这些段 docker 会用，不要宣告)</li><li>10.x.x.0/8 (注意避开学校的内网段，不要使用太高或者太低的地址)</li><li>11.x.x.0/24 (美国国防部的公网段其中之一，他们一般当内网段用)</li><li>100.64.x.0/24 (比较少见的保留段 CGNAT 运营商 NAT 段)</li><li>192.168.64.0/18 (杭电系统在用)</li><li>192.168.x.0 (真的很容易冲突，不要用)</li></ul><p>此外你还需要避开一些保留的内网段</p><p>包括：</p><table tabindex="0"><thead><tr><th>网段</th><th>说明</th></tr></thead><tbody><tr><td><code>172.16.0.0/16</code></td><td>DN11 常规成员段</td></tr><tr><td><code>172.16.255.0/24</code></td><td>公共服务段</td></tr><tr><td><code>10.0.0.0/24</code> <code>10.42.0.0/16</code> <br> <code>10.43.0.0/16</code> <code>172.16.200.0/24</code> <br> <code>172.16.254.0/24</code> <code>172.17.0.0/16</code> <br> <code>172.20.0.0/14</code> <code>172.26.0.0/16</code> <br> <code>172.27.0.0/16</code> <code>192.168.1.0/24</code></td><td>保留段</td></tr><tr><td><code>172.16.128.0/24</code> <code>172.16.129.0/24</code></td><td>不建议</td></tr></tbody></table><h2 id="隧道" tabindex="-1">隧道 <a class="header-anchor" href="#隧道" aria-label="Permalink to &quot;隧道&quot;">​</a></h2><blockquote><p>本小节写给 Openwrt 用户，ros 用户应该都会，linux 用户参考 wg-quick 使用教程。但无论你是什么用户，请务必看完本章节的内容，铺设隧道这件事有一些实践上的做法可供参考。</p></blockquote><h3 id="安装wg-quick-op" tabindex="-1">安装 wg-quick-op <a class="header-anchor" href="#安装wg-quick-op" aria-label="Permalink to &quot;安装wg-quick-op&quot;">​</a></h3><p>柏喵给 openwrt 专门写了一个用来配置 WireGuard 的工具，他会帮你处理开机启动、ddns 的问题的同时你可以使用 wg-quick 配置文件的所有配置。主要是基于 wg-quick-go 修改，定制了一些实用功能。</p><p>Github: <a href="https://github.com/dn-11/wg-quick-op" target="_blank" rel="noreferrer">https://github.com/dn-11/wg-quick-op</a></p><p>安装方法：</p><p>在 <a href="https://github.com/dn-11/wg-quick-op/releases" target="_blank" rel="noreferrer">https://github.com/dn-11/wg-quick-op/releases</a> 选择适合你架构的包下载</p><p>下载完成后 tar -zxvf 进行解压</p><p>之后再当前文件夹下输入</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root@OP:~#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./wg-quick-op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO[0000]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> binary:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/wg-quick-op</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO[0000]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> installed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wg-quick-op</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO[0000]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wg-quick-op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init.d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> success</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>会将其安装至 /usr/sbin/ 目录下，并且添加开机启动</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>wg-quick-op 默认的输出 log 是 ERROR 级别的，如果你想看到更多的信息，修改 <code>/etc/wg-quick-op.toml</code> 文件中的 <code>level</code> 为 <code>info</code> 即可</p></div><h3 id="配置隧道" tabindex="-1">配置隧道 <a class="header-anchor" href="#配置隧道" aria-label="Permalink to &quot;配置隧道&quot;">​</a></h3><p>在 <code>/etc/wireguard</code> 下创建配置文件（没有这个文件夹的话需要创建），一条隧道对应一个配置文件，配置文件命名为 <code>xxx.conf</code> 。下面给出配置文件示例:</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Interface]</span></span>
<span class="line"><span>PrivateKey = &lt;PrivateKey&gt;</span></span>
<span class="line"><span>ListenPort = &lt;Port&gt;</span></span>
<span class="line"><span>PostUp = /sbin/ip addr add dev %i &lt;my tunnel IP&gt; peer &lt;another tunnel IP&gt;</span></span>
<span class="line"><span>Table = off</span></span>
<span class="line"><span>MTU = 1388</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Peer]</span></span>
<span class="line"><span>Endpoint = &lt;EndPoint IP&gt;</span></span>
<span class="line"><span>PublicKey = &lt;Public Key&gt;</span></span>
<span class="line"><span>AllowedIPs = 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>这里主要参考了 DN42 的配置</p><ul><li>PrivateKey <strong>私钥</strong>用 <code>wg genkey</code> 生成一个</li><li>ListenPort 为 WireGuard 监听端口，注意打开防火墙或者配置端口映射</li><li>PostUp 隧道建立时执行的命令，你需要设定你的 wg 隧道地址，这里推荐你用 <code>172.16.X.254/32</code></li><li>PostUp 隧道建立时执行的命令，这个命令添加了一条对等路由，例如 <code>/sbin/ip addr add dev %i 172.16.4.254/32 peer 172.16.2.254/32</code></li><li>Table = off 请务必使用 off，路由由 bird2 来接管，不需要 WireGuard 创建</li><li>Endpoint 填对面的 IP 和监听的端口</li><li>PublicKey 填对面的公钥，公钥可用用 <code>wg pubkey</code> 命令，然后粘贴<strong>私钥</strong>进去按 ctrl+d 获取</li><li>AllowedIPs 允许所有<strong>内网</strong> IP 通过 WireGuard 接口</li><li>MTU = 1388 如果你在杭电内网，设置为 1388 或更小，如果你在其他地方，设置为 1420</li><li>MTU 可以在 <code>/etc/wg-quick-op.toml</code> 中统一配置，见<a href="https://github.com/dn-11/wg-quick-op/blob/master/conf/config-sample.toml" target="_blank" rel="noreferrer"> config-sample.toml</a></li></ul><p>使用 <code>wg-quick-op up 接口名</code> 来连接这个接口，没有意外的话，现在你能够 ping 通对面的对端 IP 了</p><h4 id="故障排查" tabindex="-1">故障排查 <a class="header-anchor" href="#故障排查" aria-label="Permalink to &quot;故障排查&quot;">​</a></h4><h3 id="step1" tabindex="-1">STEP1 <a class="header-anchor" href="#step1" aria-label="Permalink to &quot;STEP1&quot;">​</a></h3><p>首先你需要检查隧道有没有连接上，执行 <code>wg show 接口名</code> ，看 latest handshake，如果握手时间在两分钟内都是正常的，如果大于两分钟或者没有这个字段，说明 WireGuard 连接没有连上。</p><p>这一般是因为端口没开，检查路由器的入站配置，如果是旁路由，还得检查一下端口映射是否正确。这也有可能是 DNS 记录的地址过期导致的，检查一下 WireGuard 的 endpoint 地址是否确实是对面的 IP 地址。</p><h3 id="step2" tabindex="-1">STEP2 <a class="header-anchor" href="#step2" aria-label="Permalink to &quot;STEP2&quot;">​</a></h3><p>ping 对方隧道地址</p><p>如果连接上了还是没有 ping 通，请检查路由表，有没有到对端的路由，并再次检查你的 WireGuard 配置并重启接口</p><h3 id="step3" tabindex="-1">STEP3 <a class="header-anchor" href="#step3" aria-label="Permalink to &quot;STEP3&quot;">​</a></h3><p>有时候运营商会截掉某固定公钥的流量，这时候你可以尝试更换公钥</p><h2 id="bgp" tabindex="-1">BGP <a class="header-anchor" href="#bgp" aria-label="Permalink to &quot;BGP&quot;">​</a></h2><h3 id="配置-bird2" tabindex="-1">配置 bird2 <a class="header-anchor" href="#配置-bird2" aria-label="Permalink to &quot;配置 bird2&quot;">​</a></h3><blockquote><p>本小节写给 bird2 用户，ros 和其他用户可供参考，但是依旧推荐阅读</p></blockquote><p>下面给出 BGP 配置示例，以下示例适用于 AS 内只有一台路由设备的配置，如果你的 AS 内有多个路由设备还要做不少额外配置，之后可以另外写一篇文章来谈谈这个问题</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> syslog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> protocols</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可以采用隧道地址，也可以采用路由所在的IP，在自己的网段内且不重复即可</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">254</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 分表，给后期的其他配置留一点回旋的余地</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ipv4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从 master4 导出所有路由表到 kernel</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kernel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 宣告 172.16.4.0/24 段</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 只是为了让BGP的路由表里出现这条路由，不要担心 reject</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 这个动作其实无所谓，reject 这个动作并不会被发到其他 AS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 后续将在导出到 master4 的时候删除这条路由，本地也不会有这一条</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 请修改为你自己要宣告的段</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    route</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义BGP模板</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bgp</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BGP_peers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 修改为隧道地址和你的ASN </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    local</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">254</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220084444</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RTS_STATIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RTS_BGP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从 BGP_table 导入路由到 master4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> master4;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    peer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    import </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 过滤 protocol static 添加的 reject</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RTS_STATIC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> then</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从模板定义一个BGP邻居</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># protocol bgp protocol名称 from 模板名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hakuya </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_peers {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 对端隧道地址%接口 as ASN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">254</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hakuya </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220081919</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><p>所有相关配置指导已经写在配置文件里了，修改好覆盖 bird 原有的配置文件即可</p><p>修改好配置文件后，使用 <code>birdc c</code> 应用配置，使用 <code>birdc s p</code> 查看所有 protocol 的连接状态，一切顺利的话，你的 BGP 连接应该已经 Established 了</p><h3 id="添加更多邻居" tabindex="-1">添加更多邻居 <a class="header-anchor" href="#添加更多邻居" aria-label="Permalink to &quot;添加更多邻居&quot;">​</a></h3><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># protocol bgp protocol名称 from 模板名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hakuya </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_peers {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 对端隧道地址%接口 as ASN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">254</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hakuya </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220081919</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>常见故障：% 后填写的接口名和 wg 配置文件启动的接口要完全对应</p></div><p>将这一块内容复制粘贴在文件后面，再修改修改内容即可</p><h3 id="bird故障排查" tabindex="-1">bird 故障排查 <a class="header-anchor" href="#bird故障排查" aria-label="Permalink to &quot;bird故障排查&quot;">​</a></h3><p><strong>STEP1 检查 bird 配置文件时候有还未修改为自己的信息的地方</strong></p><p><strong>STEP2 <code>birdc c</code> 应用配置了没有？</strong></p><p><strong>STEP3 用 <code>birdc s p</code> 看看具体卡什么状态了</strong></p><p>常见状态：</p><ul><li><code>Idle</code> 未启动（一般是配置填坏了）</li><li><code>Established</code> 链接已建立</li><li><code>Connect</code> 隧道没通，bgp 未建立</li></ul><h2 id="end-but-not-ended" tabindex="-1">End But not Ended <a class="header-anchor" href="#end-but-not-ended" aria-label="Permalink to &quot;End But not Ended&quot;">​</a></h2><p>现在 BGP 连接应该已经建立起来了，可以使用 <code>birdc s p</code> 查看所有 protocol 的连接状态，一切顺利的话，你的 BGP 连接应该已经 Established 了</p><p>如果你的 AS 里有不少子网，这一切还只是折腾 BGP 的开始，在后面还有 BGP Large Community ，BGP confederation ，RR 等内容。</p><h2 id="route-collector" tabindex="-1">Route collector <a class="header-anchor" href="#route-collector" aria-label="Permalink to &quot;Route collector&quot;">​</a></h2><p>Route Collector 用于收集所有人的路由最终绘制成一张实时更新的图。</p><p>配置详见 <a href="./collector.html">Collector</a></p>`,65)])])}const b=a(p,[["render",e]]);export{o as __pageData,b as default};
