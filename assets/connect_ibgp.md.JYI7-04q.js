import{_ as p,C as e,c as h,o as i,a2 as a,b as r,w as n,a as t,G as k,a3 as d}from"./chunks/framework.9Uv4PgnO.js";const E="/img/ibgp/dup-rr.png",C=JSON.parse('{"title":"IBGP","description":"","frontmatter":{},"headers":[],"relativePath":"connect/ibgp.md","filePath":"connect/ibgp.md"}'),c={name:"connect/ibgp.md"};function g(b,s,y,o,F,u){const l=e("Mermaid");return i(),h("div",null,[s[1]||(s[1]=a(`<h1 id="ibgp" tabindex="-1">IBGP <a class="header-anchor" href="#ibgp" aria-label="Permalink to &quot;IBGP&quot;">​</a></h1><p>书接上文 <a href="/connect/ospf.html">OSPF</a>，本篇着重解决此前提到的第二个问题，EBGP 外部路由在 AS 内部的转发。</p><h2 id="ibgp-1" tabindex="-1">IBGP <a class="header-anchor" href="#ibgp-1" aria-label="Permalink to &quot;IBGP&quot;">​</a></h2><p>IBGP 和 EBGP 其实很相似，最大的不同点是他一般只传播一次，即通过 IBGP 收到的路由不会被转发到其他 IBGP Peer。所以如果使用纯 IBGP 完成同步外部路由到内网所有路由设备的任务，那么就需要把 IBGP 配置成 fullmesh 的形状，也就是说每一个节点和其他所有的节点都需要做 Peer。</p><p>为什么 IBGP 只能传播一次呢，我的理解下是为了防止产生环。EBGP 有 AS-PATH，可以用来发现路径有有没有自己从而防止产生环路，而 IBGP 在一个 AS 内部传播，就没有 AS-PATH 一说了，人们于是就需要一个别的机制来防止环路的产生。</p><p>那么我们 IBGP 只能做 fullmesh 吗？显然不可能，后来人们端出了 RR 反射器 (Route Reflector)，可以允许部分节点对收到的 IBGP 路由做一个转发，从而大幅减少 IBGP 的配置量。</p><p>如果您是初学者，这里诚挚推荐您从双节点做 IBGP fullmesh 开始。</p><h2 id="ibgp-fullmesh" tabindex="-1">IBGP fullmesh <a class="header-anchor" href="#ibgp-fullmesh" aria-label="Permalink to &quot;IBGP fullmesh&quot;">​</a></h2><p>以双节点为例</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bgp</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ibgp_peers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220084444</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        next hop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ebgp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        igp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OSPF_table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RTS_BGP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> then</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># change it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IBGP_xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ibgp_peers {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> internal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>其实和 EBGP 非常相似，前面的 <code>local</code> 和 <code>source address</code> 和 EBGP 保持一致。</p><p>在 ipv4 块，我们添加了一句 <code>next hop self ebgp</code> 也就是对所有收到的 ebgp 路由设置自己为下一跳网关，由于 AS 内部的 OSPF 已经跑通了，所以设为自己的递归路由一下就可以通过 OSPF 的表找到下一跳网关的位置。下面紧接着的 <code>igp table OSPF_table</code> 就是对于接收到的 IBGP 路由 bird 去搜索递归路由用的路由表，我们给他设置为我们 OSPF 的表。</p><p>至于为什么这里突然提到了递归路由，这是因为我们把路由通过 IBGP 通告到了我们的 AS 内部后其实这个路由的网关往往并不能直接路由得到。当我们收到一个 IBGP 路由后我们需要根据 OSPF 表做递归路由从而决定真正的下一跳地址。</p><p>再往后我们在 <code>export</code> 里做了一个过滤拒绝了非 BGP 路由，这是因为我们静态宣告自己的网段是 Static 路由做的。而 IBGP 从设计上来说，并不适用于传递这些信息，更何况对于内部而言这是错误的，因此这里做一个过滤。</p><p>最后我们依旧和使用 EBGP 一样，根据上面的模板定义一个新的 IBGP 连接，不同的是现在不需要指定接口，<strong>也不要写隧道 IP</strong>，填写目标路由器本身的 IP 即可，IBGP 的 peer 默认是 multihop 的，他会自己根据路由表路由过去，最终连上就可以了，后面标识 internal 表示这是一个 IBGP。</p><h3 id="继续增加节点" tabindex="-1">继续增加节点 <a class="header-anchor" href="#继续增加节点" aria-label="Permalink to &quot;继续增加节点&quot;">​</a></h3><p>这里涉及三个协议，OSPF IBGP EBGP。对于 OSPF 增加节点只要有一条隧道通上就好了。EBGP 照样配就是，尽可能就近 peer。而 IBGP，你每增加一个节点，这个节点要和现存的所有节点 peer。</p><p>想必大伙也发现了，如果节点数量上来了，IBGP fullmesh 实在是过于繁琐，这就引出了 RR。</p><h2 id="rr" tabindex="-1">RR <a class="header-anchor" href="#rr" aria-label="Permalink to &quot;RR&quot;">​</a></h2><p>rr（Route Reflector）实际上是在 IBGP 上开洞，允许部分路由器收到的路由进行反射。</p><p>这些允许进行反射的路由器，我们称之为 rr server，也简称 rr；相对应的，连接到 rr server 的，需要通过反射获取路由的路由器，我们称之为 rr client。</p>`,21)),(i(),r(d,null,{default:n(()=>[k(l,{id:"mermaid-61",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20RR1%5Brr%5D%20---%20%7CIBGP%7C%20Router1(rr%20client)%0A%20%20%20%20RR1%5Brr%5D%20---%20%7CIBGP%7C%20Router2(rr%20client)%0A"})]),fallback:n(()=>[...s[0]||(s[0]=[t(" Loading... ",-1)])]),_:1})),s[2]||(s[2]=a(`<p>rr 的反射规则只有三条：</p><ul><li>从非客户机学到的路由，发布给所有客户机（rr client）。</li><li>从客户机学到的路由，发布给所有非客户机和客户机（发起此路由的客户机除外）。</li><li>从 EBGP 对等体学到的路由，发布给所有的非客户机和客户机。</li></ul><p>三条规则中还提到了一个 &quot;非客户机&quot; 的概念，实际上指的是连接到 rr 的非 rr client 的 IBGP peer，我们后续在多级 rr 和冗余 rr 中会再一次提到。</p><blockquote><p>参考华为关于 rr 的<a href="https://info.support.huawei.com/hedex/api/pages/EDOC1100210440/AZK0901G/09/resources/dc/dc_feature_bgp_0008.html" target="_blank" rel="noreferrer">产品文档</a></p></blockquote><p>下面以单 rr 为例给出 rr server 的配置文件。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>只部署了一个 rr 意味着 rr 节点掉线后整个网络去往其他自治域的路由都会消失，建议冗余 rr 起步</p></div><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bgp</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ibgp_peers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220084444</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        next hop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ebgp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        igp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OSPF_table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RTS_BGP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> then</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># change it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IBGP_xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ibgp_peers {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> internal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rr client;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>可以发现，其实只加了一句话 <code>rr client;</code> 用于标记对端是一个 rr client。</p><p>rr client 配置文件无需改动。</p><h2 id="冗余-rr" tabindex="-1">冗余 RR <a class="header-anchor" href="#冗余-rr" aria-label="Permalink to &quot;冗余 RR&quot;">​</a></h2><p>单 rr 的可靠性肉眼可见的差，我们需要冗余 rr 来帮助提高网络的可用性。</p><p><img src="`+E+`" alt="graph dup rr"></p><p>可以看到冗余 rr 的整体架构是将所有的 rr client 连接到所有的 rr，并且在 rr 之间也起一个 IBGP 用于交换 rr 本身的其他 BGP 路由。</p><p>在讲解配置之前，需要先引入两个概念，分别是 Originator ID 和 Cluster List。</p><p>rr 在反射的时候会给 BGP 路由添加 Originator ID 属性用于标记一条路由的最初出现的路由器的 Router ID 用于产生防止环路。路由器在通过 IBGP 收到 Originator ID 为自身 Router ID 的路由时会忽略它。</p><p>rr 在反射的时候还会 BGP 路由的 Cluster List 属性的前面添加自己的 Cluster ID，多见于多级 rr 用于 Cluster 间防环，RR 在通过 IBGP 收到 Cluster List 中存在自身 Cluster ID 的路由时会忽略它。</p><p>在冗余 rr 中需要特别注意的是，<strong>所有的 rr 的 Cluster ID 必须一致</strong>，否则很容易产生环路。</p><blockquote><p>话又说回来，有 Originator ID 保着其实不会真的环上，只会让 IBGP 路由条数变多几倍，具体几倍取决于冗余 RR 数量。</p></blockquote><p>下面继续给出配置样例。</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># RR1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bgp</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ibgp_peers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4220084444</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # change it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ipv4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        next hop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ebgp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        igp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OSPF_table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BGP_table;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        import all;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        export </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RTS_BGP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> then</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># change it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IBGP_RR_xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ibgp_peers {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> internal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># change it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IBGP_xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ibgp_peers {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> internal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rr client;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>整个配置文件只有两处改动</p><ol><li>添加了 <code>rr cluster id</code> ，这里取值为冗余 rr 中的一个 rr 的 Router ID，需要注意互为冗余的 rr 之间的 Cluster ID 需要保持一致。</li><li>添加了 <code>protocol bgp IBGP_RR_xxx</code> ，用于 fullmesh 对接到其他 RR 交换 RR 本身的其他 BGP 路由。</li></ol><h2 id="多级-rr" tabindex="-1">多级 RR <a class="header-anchor" href="#多级-rr" aria-label="Permalink to &quot;多级 RR&quot;">​</a></h2><p>DN11 还用不上，可以参考前面提到的华为产品文档学习以加深对 rr 的理解。</p><h2 id="思考题" tabindex="-1">思考题 <a class="header-anchor" href="#思考题" aria-label="Permalink to &quot;思考题&quot;">​</a></h2><ol><li>在单级冗余双 rr 场景下，如果两个 rr client 分别和一个 rr 断开连接，请问他们能否交换 EBGP 路由？如果能请阐述链路，如果不能请解释原因。</li></ol><details class="details custom-block"><summary>题解</summary><p>不能，虽然 rr 将从 rr client 收到的路由传递给其他 rr ，但在冗余 rr 场景下，rr 之间的 cluster_id 相同，在向对端传递路由时会被对端拒绝。</p></details><h2 id="疑难解答" tabindex="-1">疑难解答 <a class="header-anchor" href="#疑难解答" aria-label="Permalink to &quot;疑难解答&quot;">​</a></h2><h3 id="一堆-unreachable" tabindex="-1">一堆 unreachable <a class="header-anchor" href="#一堆-unreachable" aria-label="Permalink to &quot;一堆 unreachable&quot;">​</a></h3><p>检查 igp table 配了没，检查 ospf 路由表是否正确。</p>`,30))])}const B=p(c,[["render",g]]);export{C as __pageData,B as default};
