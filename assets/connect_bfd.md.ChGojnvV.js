import{_ as i,c as a,o as n,a2 as l}from"./chunks/framework.CempjV1Q.js";const b=JSON.parse('{"title":"BFD","description":"","frontmatter":{},"headers":[],"relativePath":"connect/bfd.md","filePath":"connect/bfd.md"}'),p={name:"connect/bfd.md"};function e(h,s,t,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="bfd" tabindex="-1">BFD <a class="header-anchor" href="#bfd" aria-label="Permalink to &quot;BFD&quot;">​</a></h1><p><a href="https://csmantle.top/2024/09/22/using-bfd-in-bird2.html" target="_blank" rel="noreferrer">原文链接</a></p><blockquote><p>本文为 <a href="https://dn11.top/" target="_blank" rel="noreferrer">DN11</a> 项目编写.</p><p>BIRD2 路由软件支持在链路上搭建 BFD 故障检测协议，能够以流量为代价实现灵敏的故障检测，为其他路由协议提供邻居状态的辅助性信息.</p></blockquote><h2 id="_1-前言" tabindex="-1">1. 前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1. 前言&quot;">​</a></h2><p>双向转发检测 (<a href="https://datatracker.ietf.org/doc/html/rfc5880" target="_blank" rel="noreferrer">Bidirectional Forward Detection</a>, BFD) 通过在一条链路的两端建立会话 (session) 以检测链路连通性。链路的两端协商 Hello 包的发包间隔，在一定数量的包丢失后，链路即被判断发生故障。由于 BFD 本身不支持对端发现，因此在某一条链路上建立 BFD 需要链路的两端均正确配置协议.</p><p>BFD 协议本身仅负责进行链路连通性检测，其得到的结果如何处理由使用者决定。多种路由协议 (如 OSPF 和 BGP) 均可利用 BFD 提供的连通性信息来判断是否需要更新路由信息，一般在配置 BFD 协议之后需要在上层路由协议的配置中同时进行相关配置.</p><p>每个 BFD 控制包 (<a href="https://datatracker.ietf.org/doc/html/rfc5880#section-4" target="_blank" rel="noreferrer">BFD Control Packet</a>) 通常为 24 字节长。当给定了双方协商发包速率与链路上的封装开销后便可方便地计算出其所需的流量消耗.</p><h2 id="_2-在-bird2-中使用-bfd" tabindex="-1">2. 在 BIRD2 中使用 BFD <a class="header-anchor" href="#_2-在-bird2-中使用-bfd" aria-label="Permalink to &quot;2. 在 BIRD2 中使用 BFD&quot;">​</a></h2><p>BIRD2 支持 BFD 协议。在 BIRD2 中为一个链路搭建 BFD 协议非常简单.</p><h3 id="_2-1-配置-bfd-协议" tabindex="-1">2.1. 配置 BFD 协议 <a class="header-anchor" href="#_2-1-配置-bfd-协议" aria-label="Permalink to &quot;2.1. 配置 BFD 协议&quot;">​</a></h3><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 你的链路接口名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;wg_hgh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 同时设置期望的对端发包间隔与自己的发包间隔</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        interval</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 当链路故障后可以降低发包速度来减少无效流量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        idle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">tx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interval</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 3 个丢包后即认为链路故障</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        multiplier </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>更详细的配置说明见 <a href="https://bird.network.cz/doc/bird-6.html#ss6.2" target="_blank" rel="noreferrer">BIRD2 文档</a>.</p><p>需要注意的是，直到目前版本的 BIRD2 (2.15.1) <a href="https://bird.network.cz/doc/bird-6.html#:~:text=Note%20that%20BFD%20implementation%20in%20BIRD%20is%20currently,at%20most%20one%20protocol%20instance." target="_blank" rel="noreferrer">不支持使用多个 <code>protocol bfd</code></a>. 尝试使用多个 <code>protocol bfd</code> 会导致所有 BFD 协议无法正常工作，如:</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 警告: 至 BIRD 2.15.1 无法正常工作!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;if0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;if1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-2-在路由协议中使用-bfd-提供的连通性信息" tabindex="-1">2.2. 在路由协议中使用 BFD 提供的连通性信息 <a class="header-anchor" href="#_2-2-在路由协议中使用-bfd-提供的连通性信息" aria-label="Permalink to &quot;2.2. 在路由协议中使用 BFD 提供的连通性信息&quot;">​</a></h3><p>BIRD2 中 OSPF, BGP 和静态路由协议都支持从 BFD 协议获取连通性信息.</p><h4 id="_2-2-1-ospf" tabindex="-1">2.2.1. OSPF <a class="header-anchor" href="#_2-2-1-ospf" aria-label="Permalink to &quot;2.2.1. OSPF&quot;">​</a></h4><p>配置 OSPF 时需要为每一个邻居链路接口开启 BFD, 如下所示.</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ifs0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ospf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v2 selfnet {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    area</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ifs0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            cost</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ptp;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 使用接口上的 BFD 获取链路状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            bfd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_2-2-2-bgp" tabindex="-1">2.2.2. BGP <a class="header-anchor" href="#_2-2-2-bgp" aria-label="Permalink to &quot;2.2.2. BGP&quot;">​</a></h4><p>配置 BGP 时需要为每一个邻居 protocol 实例开启 BFD, 如下所示.</p><div class="language-bird vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bird</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protocol</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bfd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ifp0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bgp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bgp_p0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bgp_peer_template {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    neighbor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ifp0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 使用接口上的 BFD 获取链路状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bfd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 使用 BFD 获取链路状态并使用 graceful restart</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #bfd graceful;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_2-2-3-静态路由" tabindex="-1">2.2.3. 静态路由 <a class="header-anchor" href="#_2-2-3-静态路由" aria-label="Permalink to &quot;2.2.3. 静态路由&quot;">​</a></h4><p>在静态路由中开启 BFD 后，当 BFD 检测到链路故障时 BIRD2 会移除该路由的宣告。若 BFD 协议报告链路连通或未配置到 nexthop 的 BFD, 那么 BIRD2 会忽略该选项.</p><h3 id="_2-3-查看-bfd-协议状态" tabindex="-1">2.3. 查看 BFD 协议状态 <a class="header-anchor" href="#_2-3-查看-bfd-协议状态" aria-label="Permalink to &quot;2.3. 查看 BFD 协议状态&quot;">​</a></h3><p>使用 <code>birdc show bfd sessions</code> 可以查看 BFD 会话的状态与参数.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user@host:~#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> birdc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bfd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sessions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BIRD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.13.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ready.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bfd1:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> address</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                Interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  State</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      Since</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Interval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Timeout</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">172.16.23.253</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             wg_sg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      Up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         14:15:40.881</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    2.000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    6.000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">172.16.23.252</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             wg_hgh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     Up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         12:35:43.585</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    2.000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    6.000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,27)]))}const o=i(p,[["render",e]]);export{b as __pageData,o as default};
